diff --git a/node_modules/graphiql/dist/components/GraphiQL.d.ts b/node_modules/graphiql/dist/components/GraphiQL.d.ts
index 927c0ff..5a6eeb8 100644
--- a/node_modules/graphiql/dist/components/GraphiQL.d.ts
+++ b/node_modules/graphiql/dist/components/GraphiQL.d.ts
@@ -59,6 +59,7 @@ export declare type GraphiQLProps = {
     tabs?: boolean | {
         onTabChange?: (tab: TabsState) => void;
     };
+    children?: React.ReactNode;
 };
 export declare type GraphiQLState = {
     schema?: GraphQLSchema | null;
@@ -195,5 +196,5 @@ declare function GraphiQLFooter<TProps>(props: PropsWithChildren<TProps>): JSX.E
 declare namespace GraphiQLFooter {
     var displayName: string;
 }
-export {};
+export { };
 //# sourceMappingURL=GraphiQL.d.ts.map
\ No newline at end of file
diff --git a/node_modules/graphiql/src/components/GraphiQL.tsx b/node_modules/graphiql/src/components/GraphiQL.tsx
index d817c51..1f6cbd0 100644
--- a/node_modules/graphiql/src/components/GraphiQL.tsx
+++ b/node_modules/graphiql/src/components/GraphiQL.tsx
@@ -302,13 +302,13 @@ export type GraphiQLProps = {
    * default: false
    */
   tabs?:
-    | boolean
-    | {
-        /**
-         * Callback that is invoked onTabChange.
-         */
-        onTabChange?: (tab: TabsState) => void;
-      };
+  | boolean
+  | {
+    /**
+     * Callback that is invoked onTabChange.
+     */
+    onTabChange?: (tab: TabsState) => void;
+  };
 };
 
 export type GraphiQLState = {
@@ -447,10 +447,10 @@ export class GraphiQL extends React.Component<GraphiQLProps, GraphiQLState> {
       props.query !== undefined
         ? props.query
         : this._storage.get('query')
-        ? (this._storage.get('query') as string)
-        : props.defaultQuery !== undefined
-        ? props.defaultQuery
-        : defaultQuery;
+          ? (this._storage.get('query') as string)
+          : props.defaultQuery !== undefined
+            ? props.defaultQuery
+            : defaultQuery;
 
     // Get the initial query facts.
     const queryFacts = getOperationFacts(props.schema, query);
@@ -471,10 +471,10 @@ export class GraphiQL extends React.Component<GraphiQLProps, GraphiQLState> {
       props.operationName !== undefined
         ? props.operationName
         : getSelectedOperationName(
-            undefined,
-            this._storage.get('operationName') as string,
-            queryFacts && queryFacts.operations,
-          );
+          undefined,
+          this._storage.get('operationName') as string,
+          queryFacts && queryFacts.operations,
+        );
 
     // prop can be supplied to open docExplorer initially
     let docExplorerOpen = props.docExplorerOpen || false;
@@ -610,7 +610,7 @@ export class GraphiQL extends React.Component<GraphiQLProps, GraphiQLState> {
         Number(this._storage.get('secondaryEditorHeight')) || 200,
       variableEditorActive:
         this._storage.get('variableEditorActive') === 'true' ||
-        props.headerEditorEnabled
+          props.headerEditorEnabled
           ? this._storage.get('headerEditorActive') !== 'true'
           : true,
       headerEditorActive: this._storage.get('headerEditorActive') === 'true',
@@ -763,7 +763,7 @@ export class GraphiQL extends React.Component<GraphiQLProps, GraphiQLState> {
         'tabState',
         JSON.stringify(this.state.tabs, (key, value) =>
           key === 'response' ||
-          (this.state.shouldPersistHeaders && key === 'headers')
+            (this.state.shouldPersistHeaders && key === 'headers')
             ? undefined
             : value,
         ),
@@ -806,32 +806,32 @@ export class GraphiQL extends React.Component<GraphiQLProps, GraphiQLState> {
     const toolbar = find(children, child =>
       isChildComponentType(child, GraphiQL.Toolbar),
     ) || (
-      <GraphiQL.Toolbar>
-        <ToolbarButton
-          onClick={this.handlePrettifyQuery}
-          title="Prettify Query (Shift-Ctrl-P)"
-          label="Prettify"
-        />
-        <ToolbarButton
-          onClick={this.handleMergeQuery}
-          title="Merge Query (Shift-Ctrl-M)"
-          label="Merge"
-        />
-        <ToolbarButton
-          onClick={this.handleCopyQuery}
-          title="Copy Query (Shift-Ctrl-C)"
-          label="Copy"
-        />
-        <ToolbarButton
-          onClick={this.handleToggleHistory}
-          title="Show History"
-          label="History"
-        />
-        {this.props.toolbar?.additionalContent
-          ? this.props.toolbar.additionalContent
-          : null}
-      </GraphiQL.Toolbar>
-    );
+        <GraphiQL.Toolbar>
+          <ToolbarButton
+            onClick={this.handlePrettifyQuery}
+            title="Prettify Query (Shift-Ctrl-P)"
+            label="Prettify"
+          />
+          <ToolbarButton
+            onClick={this.handleMergeQuery}
+            title="Merge Query (Shift-Ctrl-M)"
+            label="Merge"
+          />
+          <ToolbarButton
+            onClick={this.handleCopyQuery}
+            title="Copy Query (Shift-Ctrl-C)"
+            label="Copy"
+          />
+          <ToolbarButton
+            onClick={this.handleToggleHistory}
+            title="Show History"
+            label="History"
+          />
+          {this.props.toolbar?.additionalContent
+            ? this.props.toolbar.additionalContent
+            : null}
+        </GraphiQL.Toolbar>
+      );
 
     const footer = find(children, child =>
       isChildComponentType(child, GraphiQL.Footer),
@@ -982,9 +982,8 @@ export class GraphiQL extends React.Component<GraphiQLProps, GraphiQLState> {
                   }}
                   onMouseDown={this.handleSecondaryEditorResizeStart}>
                   <div
-                    className={`variable-editor-title-text${
-                      this.state.variableEditorActive ? ' active' : ''
-                    }`}
+                    className={`variable-editor-title-text${this.state.variableEditorActive ? ' active' : ''
+                      }`}
                     onClick={this.handleOpenVariableEditorTab}
                     onMouseDown={this.handleTabClickPropogation}>
                     {'Query Variables'}
@@ -994,9 +993,8 @@ export class GraphiQL extends React.Component<GraphiQLProps, GraphiQLState> {
                       style={{
                         marginLeft: '20px',
                       }}
-                      className={`variable-editor-title-text${
-                        this.state.headerEditorActive ? ' active' : ''
-                      }`}
+                      className={`variable-editor-title-text${this.state.headerEditorActive ? ' active' : ''
+                        }`}
                       onClick={this.handleOpenHeaderEditorTab}
                       onMouseDown={this.handleTabClickPropogation}>
                       {'Request Headers'}
