diff --git a/node_modules/@changesets/assemble-release-plan/dist/assemble-release-plan.cjs.dev.js b/node_modules/@changesets/assemble-release-plan/dist/assemble-release-plan.cjs.dev.js
index d2d6b1a..9b264fb 100644
--- a/node_modules/@changesets/assemble-release-plan/dist/assemble-release-plan.cjs.dev.js
+++ b/node_modules/@changesets/assemble-release-plan/dist/assemble-release-plan.cjs.dev.js
@@ -130,18 +130,9 @@ function determineDependents({
           depType,
           versionRange
         } of dependencyVersionRanges) {
-          if (shouldBumpMajor({
-            dependent,
-            depType,
-            versionRange,
-            releases,
-            nextRelease,
-            preInfo,
-            onlyUpdatePeerDependentsWhenOutOfRange: config.___experimentalUnsafeOptions_WILL_CHANGE_IN_PATCH.onlyUpdatePeerDependentsWhenOutOfRange
-          })) {
-            type = "major";
-          } else {
-            if ( // TODO validate this - I don't think it's right anymore
+          if (['patch', 'minor', 'major'].indexOf(nextRelease.type) > ['patch', 'minor', 'major'].indexOf(type)) {
+            type = nextRelease.type
+          } else if ( // TODO validate this - I don't think it's right anymore
             (!releases.has(dependent) || releases.get(dependent).type === "none") && (config.___experimentalUnsafeOptions_WILL_CHANGE_IN_PATCH.updateInternalDependents === "always" || !semver__default['default'].satisfies(incrementVersion(nextRelease, preInfo), versionRange))) {
               switch (depType) {
                 case "dependencies":
@@ -162,7 +153,8 @@ function determineDependents({
                   }
               }
             }
-          }
+          
+
         }
       }
 
@@ -183,17 +175,26 @@ function determineDependents({
       type,
       pkgJSON
     }) => {
-      // At this point, we know if we are making a change
-      updated = true;
+
       const existing = releases.get(name); // For things that are being given a major bump, we check if we have already
       // added them here. If we have, we update the existing item instead of pushing it on to search.
       // It is safe to not add it to pkgsToSearch because it should have already been searched at the
       // largest possible bump type.
 
-      if (existing && type === "major" && existing.type !== "major") {
-        existing.type = "major";
-        pkgsToSearch.push(existing);
+      if (existing) {
+        const index = ["patch", "minor", "major"].indexOf(existing.type)
+        if (type === "major") {
+          existing.type = "major";
+        } else if (type === "minor" && index < 1) {
+          existing.type = "minor";
+        } else if (type === "patch" && index < 0) {
+          existing.type = "patch";
+        }
+        // pkgsToSearch.push(existing);
       } else {
+        // At this point, we know if we are making a change
+        updated = true;
+
         let newDependent = {
           name,
           type,
@@ -311,20 +312,14 @@ function getHighestReleaseType(releases) {
   let highestReleaseType = "none";
 
   for (let release of releases) {
-    switch (release.type) {
-      case "major":
-        return "major";
-
-      case "minor":
-        highestReleaseType = "minor";
-        break;
-
-      case "patch":
-        if (highestReleaseType === "none") {
-          highestReleaseType = "patch";
-        }
-
-        break;
+    if (release.type === "major") {
+      return "major";
+    } else if (release.type === "minor") {
+      highestReleaseType = "minor";
+    } else if (release.type === "patch") {
+      if (highestReleaseType === "none") {
+        highestReleaseType = "patch";
+      }
     }
   }
 
@@ -490,6 +485,7 @@ preState, snapshot) {
   // changesets, and with a calculated new versions
 
   let releases = flattenReleases(relevantChangesets, packagesByName, config.ignore);
+
   let dependencyGraph = getDependentsGraph.getDependentsGraph(packages, {
     bumpVersionsWithWorkspaceProtocolOnly: config.bumpVersionsWithWorkspaceProtocolOnly
   });
diff --git a/node_modules/@changesets/assemble-release-plan/dist/assemble-release-plan.cjs.js b/node_modules/@changesets/assemble-release-plan/dist/assemble-release-plan.cjs.js
index f3beb31..04c332f 100644
--- a/node_modules/@changesets/assemble-release-plan/dist/assemble-release-plan.cjs.js
+++ b/node_modules/@changesets/assemble-release-plan/dist/assemble-release-plan.cjs.js
@@ -1,7 +1,3 @@
 'use strict';
 
-if (process.env.NODE_ENV === "production") {
-  module.exports = require("./assemble-release-plan.cjs.prod.js");
-} else {
-  module.exports = require("./assemble-release-plan.cjs.dev.js");
-}
+module.exports = require('./assemble-release-plan.cjs.dev.js');