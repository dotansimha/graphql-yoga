name: Tests
on:
  pull_request:
    paths-ignore:
      - 'website/**'

jobs:
  test-node:
    name: Testing on Node ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12, 14, 17, 18]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install Dependencies using Yarn
        run: yarn --ignore-engines

      - name: Build Packages
        run: yarn build

      - if: matrix.node-version == 17
        name: Run Tests with --experimental-fetch
        run: yarn test
        env:
          NODE_OPTIONS: --experimental-fetch
          NODE_NO_WARNINGS: true

      - if: matrix.node-version != 17
        name: Run Tests
        run: yarn test

  test-cf:
    name: Testing on Cloudflare Workers w/ Modules Approach
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Use Node 18
        uses: actions/setup-node@master
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install Dependencies using Yarn
        run: yarn --ignore-engines

      - name: Build Packages
        run: yarn build

      - name: Run Tests
        working-directory: ./examples/cloudflare-modules
        run: yarn test

  test-esm:
    name: Testing with Node ESM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Use Node 18
        uses: actions/setup-node@master
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install Dependencies using Yarn
        run: yarn --ignore-engines

      - name: Build Packages
        run: yarn build

      - name: Run Tests
        working-directory: ./examples/node-esm
        run: yarn test

  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Use Node 18
        uses: actions/setup-node@master
        with:
          node-version: 18
          cache: 'yarn'
      
      - name: Use Deno
        uses: denoland/setup-deno@v1

      - name: Install Dependencies using Yarn
        run: yarn --ignore-engines

      - name: Build Packages
        run: yarn build

      - name: Typecheck
        run: yarn run check
